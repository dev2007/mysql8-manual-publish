(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{438:function(s,a,t){"use strict";t.r(a);var r=t(13),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_3-3-4-7-模式匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-7-模式匹配"}},[s._v("#")]),s._v(" 3.3.4.7 模式匹配")]),s._v(" "),a("p",[s._v("MySQL 提供了标准的 SQL 模式匹配以及基于扩展正则表达式的模式匹配，这些扩展正则表达式类似于Unix实用程序（如 "),a("strong",[s._v("vi")]),s._v("、"),a("strong",[s._v("grep")]),s._v(" 和 "),a("strong",[s._v("sed")]),s._v("）所使用的正则表达式。")]),s._v(" "),a("p",[s._v("SQL 模式匹配允许你使用 "),a("code",[s._v("_")]),s._v(" 来匹配任何单个字符，使用 "),a("code",[s._v("%")]),s._v(" 来匹配任意数量的字符（包括零个字符）。在 MySQL 中，默认情况下，SQL 模式不区分大小写。此处显示了一些示例。使用 SQL 模式时不要使用 "),a("code",[s._v("=")]),s._v(" 或 "),a("code",[s._v("<>")]),s._v("。请改用 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.1/string-comparison-functions.html"}},[s._v("LIKE")]),s._v(" 或 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.1/string-comparison-functions.html"}},[s._v("NOT LIKE")]),s._v(" 比较运算符。")],1),s._v(" "),a("p",[s._v("查找以 "),a("code",[s._v("b")]),s._v(" 开头的名称：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE name LIKE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+--------+--------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bowser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Diane  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-08-31 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1995")]),s._v("-07-29 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("查找以 "),a("code",[s._v("fy")]),s._v(" 结尾的名称：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE name LIKE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%fy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+--------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Fluffy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1993")]),s._v("-02-04 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("要查找包含 "),a("code",[s._v("w")]),s._v(" 的名称：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE name LIKE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%w%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+----------+-------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------+-------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Claws    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1994")]),s._v("-03-17 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bowser   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Diane "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-08-31 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1995")]),s._v("-07-29 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Whistler "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" bird    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1997")]),s._v("-12-09 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------+-------+---------+------+------------+------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("要查找恰好包含五个字符的名称，请使用 "),a("code",[s._v("_")]),s._v(" 模式字符的五个实例：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE name LIKE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_____'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Claws "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1994")]),s._v("-03-17 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("MySQL 提供的另一种模式匹配使用扩展正则表达式。测试此类型模式的匹配时，请使用 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("REGEXP_LIKE()")]),s._v(" 函数（或 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("REGEXP")]),s._v(" 或 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("RLIKE")]),s._v(" 运算符，它们是 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("REGEXP_LIKE()")]),s._v(" 的同义词）。")],1),s._v(" "),a("p",[s._v("以下列表描述了扩展正则表达式的一些特性：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v(".")]),s._v(" 匹配任何单个字符。")])]),s._v(" "),a("li",[a("p",[s._v("字符类 "),a("code",[s._v("[…]")]),s._v(" 匹配括号内的任何字符。例如，"),a("code",[s._v("[abc]")]),s._v(" 匹配a、b或c。要命名字符范围，请使用破折号。"),a("code",[s._v("[a-z]")]),s._v(" 匹配任何字母，而 "),a("code",[s._v("[0-9]")]),s._v(" 匹配任何数字。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("*")]),s._v(" 匹配其前面的对象的零个或多个实例。例如，"),a("code",[s._v("x*")]),s._v(" 匹配任意数量的 "),a("code",[s._v("x")]),s._v(" 个字符，"),a("code",[s._v("[0-9]*")]),s._v(" 匹配任意数字，"),a("code",[s._v(".*")]),s._v(" 匹配任意数目的任何对象。")])]),s._v(" "),a("li",[a("p",[s._v("如果正则表达式模式与测试值中的任何位置匹配，则正则表达式模式匹配成功。（这与 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.1/string-comparison-functions.html"}},[s._v("LIKE")]),s._v(" 模式匹配不同，只有当 LIKE 模式匹配整个值时才会成功。）")],1)]),s._v(" "),a("li",[a("p",[s._v("要锚定模式，使其必须与正在测试的值的开头或结尾相匹配，请在模式的开头使用 "),a("code",[s._v("^")]),s._v(" 或结尾使用 "),a("code",[s._v("$")]),s._v("。")])])]),s._v(" "),a("p",[s._v("为了演示扩展的正则表达式是如何工作的，在此重写前面显示的LIKE查询以使用 "),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("REGEXP_LIKE()")]),s._v("。")],1),s._v(" "),a("p",[s._v("要查找以 "),a("code",[s._v("b")]),s._v(" 开头的名称，请使用 "),a("code",[s._v("^")]),s._v(" 匹配名称的开头：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+--------+--------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bowser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Diane  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1979")]),s._v("-08-31 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1995")]),s._v("-07-29 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("要强制正则表达式比较区分大小写，请使用区分大小写的排序规则，或使用 "),a("RouterLink",{attrs:{to:"/11/11.3/11.3.3/binary-varbinary.html"}},[s._v("BINARY")]),s._v(" 关键字使其中一个字符串成为二进制字符串，或指定 "),a("code",[s._v("c")]),s._v(" 匹配控制字符。这些查询中的每一个都只匹配名称开头的小写 "),a("code",[s._v("b")]),s._v("：")],1),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^b'")]),s._v(" COLLATE utf8mb4_0900_as_cs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nSELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, BINARY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nSELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("要查找以 "),a("code",[s._v("fy")]),s._v(" 结尾的名称，请使用 "),a("code",[s._v("$")]),s._v(" 匹配名称的结尾：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fy$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+--------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Fluffy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1993")]),s._v("-02-04 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------+--------+---------+------+------------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("要查找包含 "),a("code",[s._v("w")]),s._v(" 的名称，请使用以下查询：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'w'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+----------+-------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------+-------+---------+------+------------+------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Claws    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1994")]),s._v("-03-17 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bowser   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Diane "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-08-31 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1995")]),s._v("-07-29 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Whistler "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" bird    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1997")]),s._v("-12-09 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----------+-------+---------+------+------------+------------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("因为如果正则表达式模式出现在值中的任何位置，则正则表达式模式匹配，所以在上一个查询中，不必在模式的任一侧放置通配符，以使其与整个值匹配，就像 SQL 模式一样。")]),s._v(" "),a("p",[s._v("要查找恰好包含五个字符的名称，请使用 "),a("code",[s._v("^")]),s._v(" 和 "),a("code",[s._v("$")]),s._v(" 来匹配名称的开头和结尾，以及的五个实例 "),a("code",[s._v(".")]),s._v(" 介于两者之间：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^.....$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Claws "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1994")]),s._v("-03-17 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("你还可以使用 "),a("code",[s._v("｛n｝")]),s._v("（“重复 "),a("em",[s._v("n")]),s._v(" 次”）运算符编写上一个查询：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT * FROM pet WHERE REGEXP_LIKE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name, "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^.{5}$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" owner  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sex  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" birth      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" death "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Claws "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Gwen   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" m    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1994")]),s._v("-03-17 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Buffy "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Harold "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" dog     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1989")]),s._v("-05-13 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------+--------+---------+------+------------+-------+\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("有关正则表达式语法的更多信息，参阅"),a("RouterLink",{attrs:{to:"/12/12.8/12.8.2/regexp.html"}},[s._v("章节 12.8.2，“正则表达式”")]),s._v("。")],1),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/pattern-matching.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("原文链接"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);